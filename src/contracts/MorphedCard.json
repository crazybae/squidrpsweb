{
  "mainnetAddress": "...",
  "rinkebyAddress": "0x6534A35b8A7D42531f6D6EA7C26e53455cd059aC",
  "goerliAddress": "0xD081EF31EA3ce1aDdBE7647138b7B3be84634B14",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mainCardAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "bgImageURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "fontColor",
          "type": "string"
        }
      ],
      "name": "customizedTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getConsonants",
      "outputs": [
        {
          "internalType": "string[3]",
          "name": "",
          "type": "string[3]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getConsonantsIndex",
      "outputs": [
        {
          "internalType": "uint8[3]",
          "name": "",
          "type": "uint8[3]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getGenes",
      "outputs": [
        {
          "internalType": "uint8[8]",
          "name": "",
          "type": "uint8[8]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mainCardAddress",
          "type": "address"
        }
      ],
      "name": "updateMainCardAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf0de7767db49ce6a118231b94516150cce2e986cc49e7b59becda19ef34a2ba",
  "receipt": {
    "to": null,
    "from": "0x7D0479eB884C41311F5a6581d42B8b784fA8c1b6",
    "contractAddress": "0xD081EF31EA3ce1aDdBE7647138b7B3be84634B14",
    "transactionIndex": 0,
    "gasUsed": "1760287",
    "logsBloom": "0x
    "blockHash": "0xcb12a88721f8393d1862bdc8ca9bc2fb0aadde5177f3df7c10291aa8d583dd92",
    "transactionHash": "0xcf0de7767db49ce6a118231b94516150cce2e986cc49e7b59becda19ef34a2ba",
    "logs": [],
    "blockNumber": 5728000,
    "cumulativeGasUsed": "1760287",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC814aFD17170d2A8c02C9f0E8B7bA8Bf96aB75Ff"
  ],
  "solcInputHash": "b2c8b615c9648569567480726ebdf71d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainCardAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bgImageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fontColor\",\"type\":\"string\"}],\"name\":\"customizedTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getConsonants\",\"outputs\":[{\"internalType\":\"string[3]\",\"name\":\"\",\"type\":\"string[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getConsonantsIndex\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getGenes\",\"outputs\":[{\"internalType\":\"uint8[8]\",\"name\":\"\",\"type\":\"uint8[8]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainCardAddress\",\"type\":\"address\"}],\"name\":\"updateMainCardAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MophedCard.sol\":\"MorphedCard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MophedCard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// [MIT License]\\n/// @title Base64\\n/// @notice Provides a function for encoding some bytes in base64\\n/// @author Brecht Devos <brecht@loopring.org>\\nlibrary Base64 {\\n    bytes internal constant TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /// @notice Encodes some bytes to the base64 representation\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        uint256 len = data.length;\\n        if (len == 0) return \\\"\\\";\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n        // Add some extra buffer at the end\\n        bytes memory result = new bytes(encodedLen + 32);\\n\\n        bytes memory table = TABLE;\\n\\n        assembly {\\n            let tablePtr := add(table, 1)\\n            let resultPtr := add(result, 32)\\n\\n            for {\\n                let i := 0\\n            } lt(i, len) {\\n\\n            } {\\n                i := add(i, 3)\\n                let input := and(mload(add(data, i)), 0xffffff)\\n\\n                let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n                out := shl(224, out)\\n\\n                mstore(resultPtr, out)\\n\\n                resultPtr := add(resultPtr, 4)\\n            }\\n\\n            switch mod(len, 3)\\n            case 1 {\\n                mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n            }\\n            case 2 {\\n                mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n            }\\n\\n            mstore(result, encodedLen)\\n        }\\n\\n        return string(result);\\n    }\\n}\\n\\ninterface SquidGameCard {\\n\\n    function ownerOf(uint256 _tokenId) external view returns (address);\\n    function getGenes(uint256 _tokenId) external view returns (uint8[8] memory);\\n    function getConsonants(uint256 _tokenId) external view returns (string[3] memory);\\n    function getConsonantsIndex(uint256 _tokenId) external view returns (uint8[3] memory);\\n    function tokenURI(uint256 _tokenId) external view returns (string memory);\\n}\\n\\ncontract MorphedCard {\\n\\n    address private mainCardAddress;\\n    address private deployer;\\n\\n    constructor(address _mainCardAddress) {\\n        require(address(_mainCardAddress) != address(0), \\\"token is the zero address\\\");\\n        deployer = msg.sender;\\n        mainCardAddress = _mainCardAddress;\\n    }\\n\\n    function updateMainCardAddress(address _mainCardAddress) external {\\n        require(_mainCardAddress != address(0), \\\"Bad main card address\\\");\\n        require(msg.sender == deployer, \\\"You're not allowed\\\");\\n        mainCardAddress = _mainCardAddress;\\n    }\\n\\n    function ownerOf(uint256 _tokenId) public view returns (address) {\\n        return SquidGameCard(mainCardAddress).ownerOf(_tokenId);\\n    }\\n\\n    function getGenes(uint256 _tokenId) public view returns (uint8[8] memory) {\\n        return SquidGameCard(mainCardAddress).getGenes(_tokenId);\\n    }\\n\\n    function tokenURI(uint256 _tokenId) public view returns (string memory) {\\n        return SquidGameCard(mainCardAddress).tokenURI(_tokenId);\\n    }\\n\\n    function getConsonants(uint256 _tokenId) public view returns (string[3] memory) {\\n        return SquidGameCard(mainCardAddress).getConsonants(_tokenId);\\n    }\\n    function getConsonantsIndex(uint256 _tokenId) public view returns (uint8[3] memory) {\\n        return SquidGameCard(mainCardAddress).getConsonantsIndex(_tokenId);\\n    }\\n\\n    function customizedTokenURI(uint256 _tokenId, string calldata bgImageURI, string calldata fontColor) external view returns (string memory) {      \\n        \\n        string[7] memory parts;\\n        string[16] memory attrParts;\\n        uint8[8] memory geneArray = getGenes(_tokenId);\\n        string[3] memory consArray = getConsonants(_tokenId);\\n        uint8[3] memory consIndex = getConsonantsIndex(_tokenId);        \\n\\n        parts[0] = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"xMinYMin meet\\\" viewBox=\\\"0 0 350 220\\\"><style>.base {font-family: Verdana; fill: ';\\n        // font color\\n        parts[1] = ';}</style><image width=\\\"350\\\" height=\\\"220\\\" xlink:href=\\\"';\\n        // background image url\\n        parts[2] = '\\\"/><text x=\\\"50%\\\" y=\\\"100\\\" dominant-baseline=\\\"middle\\\" text-anchor=\\\"middle\\\" class=\\\"base\\\" style=\\\"font-size:700%; letter-spacing: -0.2em;\\\">';\\n        parts[3] = string(abi.encodePacked(consArray[0], ' ', consArray[1], ' ', consArray[2]));\\n        parts[4] = '</text><text x=\\\"50%\\\" y=\\\"180\\\" dominant-baseline=\\\"middle\\\" text-anchor=\\\"middle\\\" class=\\\"base\\\" style=\\\"font-size:150%;\\\">&#937; ';\\n        parts[5] = string(abi.encodePacked(toString(geneArray[0]), toString(geneArray[1]), toString(geneArray[2]), toString(geneArray[3]), ' '));\\n        parts[6] = string(abi.encodePacked(toString(geneArray[4]), toString(geneArray[5]), toString(geneArray[6]), toString(geneArray[7]), '</text></svg>'));\\n\\n        string memory output = string(abi.encodePacked(parts[0], fontColor, parts[1], bgImageURI, parts[2], parts[3]));\\n        output = string(abi.encodePacked(output, parts[4], parts[5], parts[6]));\\n\\n        string memory attrs = string(abi.encodePacked('[{\\\"trait_type\\\": \\\"Left Consonant\\\", \\\"value\\\": \\\"', consArray[0], '\\\"}, {\\\"trait_type\\\": \\\"Center Consonant\\\", \\\"value\\\": \\\"', consArray[1]));\\n        attrs = string(abi.encodePacked(attrs, '\\\"}, {\\\"trait_type\\\": \\\"Right Consonant\\\", \\\"value\\\": \\\"', consArray[2], '\\\"}, {\\\"trait_type\\\": \\\"Gene0\\\", \\\"value\\\": \\\"', toString(geneArray[0])));\\n\\n        attrParts[0] = '\\\"}, {\\\"trait_type\\\": \\\"Gene1\\\", \\\"value\\\": \\\"';\\n        attrParts[1] = toString(geneArray[1]);\\n        attrParts[2] = '\\\"}, {\\\"trait_type\\\": \\\"Gene2\\\", \\\"value\\\": \\\"';        \\n        attrParts[3] = toString(geneArray[2]);\\n        attrParts[4] = '\\\"}, {\\\"trait_type\\\": \\\"Gene3\\\", \\\"value\\\": \\\"';        \\n        attrParts[5] = toString(geneArray[3]);\\n        attrParts[6] = '\\\"}, {\\\"trait_type\\\": \\\"Gene4\\\", \\\"value\\\": \\\"';        \\n        attrParts[7] = toString(geneArray[4]);\\n        attrParts[8] = '\\\"}, {\\\"trait_type\\\": \\\"Gene5\\\", \\\"value\\\": \\\"';        \\n        attrParts[9] = toString(geneArray[5]);\\n        attrParts[10] = '\\\"}, {\\\"trait_type\\\": \\\"Gene6\\\", \\\"value\\\": \\\"';        \\n        attrParts[11] = toString(geneArray[6]);\\n        attrParts[12] = '\\\"}, {\\\"trait_type\\\": \\\"Gene7\\\", \\\"value\\\": \\\"';        \\n        attrParts[13] = toString(geneArray[7]);\\n        if (consIndex[0] == 7 && consIndex[1] == 14 && consIndex[2] == 4) {\\n            attrParts[14] = '\\\"}, {\\\"trait_type\\\": \\\"Ojingeo\\\", \\\"value\\\": \\\"Y\\\"}, {\\\"trait_type\\\": \\\"Same Consonants\\\", \\\"value\\\": \\\"';\\n        } else {\\n            attrParts[14] = '\\\"}, {\\\"trait_type\\\": \\\"Ojingeo\\\", \\\"value\\\": \\\"N\\\"}, {\\\"trait_type\\\": \\\"Same Consonants\\\", \\\"value\\\": \\\"';\\n        }\\n        if (consIndex[0] == consIndex[1] && consIndex[0] == consIndex[2]) {\\n            attrParts[15] = 'Y\\\"}]';\\n        } else {\\n            attrParts[15] = 'N\\\"}]';\\n        }\\n\\n        attrs = string(abi.encodePacked(attrs, attrParts[0], attrParts[1], attrParts[2], attrParts[3], attrParts[4], attrParts[5], attrParts[6], attrParts[7]));\\n        attrs = string(abi.encodePacked(attrs, attrParts[8], attrParts[9], attrParts[10], attrParts[11], attrParts[12], attrParts[13], attrParts[14], attrParts[15]));\\n        \\n        output = Base64.encode(bytes(string(abi.encodePacked('{\\\"name\\\": \\\"Korean Consonants Card NFT #', toString(_tokenId), '\\\", \\\"attributes\\\": ', attrs ,', \\\"description\\\": \\\"The Korean Consonants cards are invitation to enter the adventurous and mysterious metaverse games. Genes characteristics and other functionality are intentionally omitted for unlimited imagination and community-driven game development. Start your journey now!\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,', Base64.encode(bytes(output)), '\\\"}'))));\\n        return string(abi.encodePacked('data:application/json;base64,', output));\\n    }\\n\\n    function toString(uint256 value) internal pure returns (string memory) {\\n    // Inspired by OraclizeAPI's implementation - MIT license\\n    // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\",\"keccak256\":\"0x98db5df710cef4d9862ce88aa78bef26b72d60b7d93cfa41b004ca9acb55719e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 101,
        "contract": "contracts/MophedCard.sol:MorphedCard",
        "label": "mainCardAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 103,
        "contract": "contracts/MophedCard.sol:MorphedCard",
        "label": "deployer",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}